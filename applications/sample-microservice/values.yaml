# Sample Microservice Values
name: sample-api
component: backend
partOf: sample-app

# Image configuration
image:
  repository: nginx
  tag: "1.21"
  pullPolicy: IfNotPresent

# Replica configuration
replicaCount: 2

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 80

# Environment variables
env:
  NODE_ENV: production
  PORT: "80"
  LOG_LEVEL: info

# Health checks
livenessProbe:
  httpGet:
    path: /
    port: 80
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /
    port: 80
  initialDelaySeconds: 5
  periodSeconds: 5

# Resource limits
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70

# Service Account
serviceAccount:
  create: true
  name: ""
  annotations: {}

# Security Context
security:
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001
  
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1001

# Pod annotations
podAnnotations: {}

# Node selection
nodeSelector: {}
tolerations: []
affinity: {} 