apiVersion: v1
kind: Namespace
metadata:
  name: container-registry
  labels:
    name: container-registry

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: registry-pv
  labels:
    app: docker-registry
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /opt/registry-data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sanzad-ubuntu-21  # Control plane node

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-pvc
  namespace: container-registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: local-storage

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: container-registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      nodeSelector:
        kubernetes.io/hostname: sanzad-ubuntu-21  # Run on control plane
      containers:
      - name: registry
        image: registry:2.8.2
        ports:
        - containerPort: 5000
          name: registry
          protocol: TCP
        env:
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /var/lib/registry
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        - name: REGISTRY_HTTP_ADDR
          value: ":5000"
        volumeMounts:
        - name: registry-storage
          mountPath: /var/lib/registry
        livenessProbe:
          httpGet:
            path: /v2/
            port: 5000
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /v2/
            port: 5000
          initialDelaySeconds: 5
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: registry-storage
        persistentVolumeClaim:
          claimName: registry-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  namespace: container-registry
  labels:
    app: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
  - name: registry
    port: 5000
    targetPort: 5000
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-external
  namespace: container-registry
  labels:
    app: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
  - name: registry
    port: 5000
    targetPort: 5000
    nodePort: 30500
    protocol: TCP
  type: NodePort

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  namespace: container-registry
data:
  daemon.json: |
    {
      "insecure-registries": ["sanzad-ubuntu-21:30500", "sanzad-ubuntu-22:30500", "worker-node1:30500", "localhost:30500"]
    } 